id: xnu

name: XNU Dojo

type: public

modules:

- import:
    dojo: arm-architecture
    module: intro-to-arm

- import:
    dojo: arm-architecture
    module: arm-rop

- id: xnu-mach-ipc
  name: Mach IPC
  image: mac:macos-12.5
  description: |
    Learn how Mach IPC and ports works!

    **Critical Note**: The machines that you are working on are purely ephemeral and **none** of your data there is saved!

    This means that you must, must, must, save your files / solution locally if you want them to persist.

    You've been warned.

    Also, you can only use `ssh hacker@pwn.college` to acess the server, the Workspace and Desktop don't work. 

  resources:
  - name: "Mach IPC"
    type: lecture
    video: WGnfhFqmR48
    playlist: PL-ymxv0nOtqqgWG_kT9WJ50MvHKWG9cFy
    slides: 1SiCnRRDuZZ_HmdHlsoXiy4MCTRw0vUO4

  challenges:
    - id: hello-world
      name: hello-world
      transfer:
        dojo: cse598-avr-f2024
        module: xnu-mach-ipc
        challenge: hello-world
      description: |
        Hello World!

        Just run `/challenge/run` to get the flag. 

    - id: send-any-port-0
      name: Send Any to Port-0
      transfer:
        dojo: cse598-avr-f2024
        module: xnu-mach-ipc
        challenge: send-any-port-0
      description: |
        For this level, just send any message to this port.

    - id: send-any-port-1
      name: Send Any to Port-1
      transfer:
        dojo: cse598-avr-f2024
        module: xnu-mach-ipc
        challenge: send-any-port-1
      description: |
        No debug output this time.

    - id: send-value-to-port-0
      name: Send Specific Value to Port-0
      transfer:
        dojo: cse598-avr-f2024
        module: xnu-mach-ipc
        challenge: send-value-to-port-0
      description: |
        Now send a specific inline value to this port.

    - id: send-value-to-port-1
      name: Send Specific Value to Port-1
      transfer:
        dojo: cse598-avr-f2024
        module: xnu-mach-ipc
        challenge: send-value-to-port-1
      description: |
        No debug output this time.

    - id: send-any-ool-port-0
      name: Send any OOL message to Port-0
      transfer:
        dojo: cse598-avr-f2024
        module: xnu-mach-ipc
        challenge: send-any-ool-port-0
      description: |
        Send any OOL message to a port.

    - id: send-any-ool-port-1
      name: Send any OOL message to Port-1
      transfer:
        dojo: cse598-avr-f2024
        module: xnu-mach-ipc
        challenge: send-any-ool-port-1
      description: |
        No debug output this time.

    - id: send-value-to-ool-port-0
      name: Send a specific value in OOL message to Port-0
      transfer:
        dojo: cse598-avr-f2024
        module: xnu-mach-ipc
        challenge: send-value-to-ool-port-0
      description: |
        Send an OOL message with a specific value to this port.

    - id: send-value-to-ool-port-1
      name: Send a specific value in OOL message to Port-1
      transfer:
        dojo: cse598-avr-f2024
        module: xnu-mach-ipc
        challenge: send-value-to-ool-port-1
      description: |
        No debug output this time.

    - id: receive-inline-flag-0
      name: Receive the inline flag on a Port-0
      transfer:
        dojo: cse598-avr-f2024
        module: xnu-mach-ipc
        challenge: receive-inline-flag-0
      description: |
        Receive the flag inline on a port.

    - id: receive-inline-flag-1
      name: Receive the inline flag on a Port-1
      transfer:
        dojo: cse598-avr-f2024
        module: xnu-mach-ipc
        challenge: receive-inline-flag-1
      description: |
        No debug output this time.

    - id: receive-ool-flag-0
      name: Receive the OOL flag on a Port-0
      transfer:
        dojo: cse598-avr-f2024
        module: xnu-mach-ipc
        challenge: receive-ool-flag-0
      description: |
        Receive the flag OOL on a port.

    - id: receive-ool-flag-1
      name: Receive the OOL flag on a Port-1
      transfer:
        dojo: cse598-avr-f2024
        module: xnu-mach-ipc
        challenge: receive-ool-flag-1
      description: |
        No debug output this time.

    - id: send-flag-back-inline-0
      name: Send flag back inline-0
      transfer:
        dojo: cse598-avr-f2024
        module: xnu-mach-ipc
        challenge: send-flag-back-inline-0
      description: |
        Send a message and we'll send back the inline flag.

    - id: send-flag-back-inline-1
      name: Send flag back inline-1
      transfer:
        dojo: cse598-avr-f2024
        module: xnu-mach-ipc
        challenge: send-flag-back-inline-1
      description: |
        No debug output this time

    - id: send-flag-back-ool-0
      name: Send flag back OOL-0
      transfer:
        dojo: cse598-avr-f2024
        module: xnu-mach-ipc
        challenge: send-flag-back-ool-0
      description: |
        Send a message and we'll send back the OOL flag.

    - id: send-flag-back-ool-1
      name: Send flag back OOL-1
      transfer:
        dojo: cse598-avr-f2024
        module: xnu-mach-ipc
        challenge: send-flag-back-ool-1
      description: |
        No debug output this time

    - id: exploit-me-inline
      name: Exploit Me Inline
      transfer:
        dojo: cse598-avr-f2024
        module: xnu-mach-ipc
        challenge: exploit-me-inline
      description: |
        Pop it

    - id: exploit-me-ool
      name: Exploit Me OOL
      transfer:
        dojo: cse598-avr-f2024
        module: xnu-mach-ipc
        challenge: exploit-me-ool
      description: |
        Pop it

- id: xnu-mach-ports
  name: Mach Ports
  image: mac:macos-12.5
  description: |
    Learn how Mach ports allow the kernel to offer different services!

    **Critical Note**: The machines that you are working on are purely ephemeral and **none** of your data there is saved!

    This means that you must, must, must, save your files / solution locally if you want them to persist.

    You've been warned.

    Also, you can only use `ssh hacker@pwn.college` to acess the server, the Workspace and Desktop don't work. 

  resources:
  - name: "Important Mach Ports"
    type: lecture
    video: rw1nvPYmeLI
    playlist: PL-ymxv0nOtqqgWG_kT9WJ50MvHKWG9cFy
    slides: 18XId6sqQrAahW20e8c4KC3EGakHqvs7W

  challenges:
    - id: task-port-read
      name: "Task Port: Read"
      transfer:
        dojo: cse598-avr-f2024
        module: xnu-mach-ports
        challenge: task-port-read
      description: |
        Use the task port to read the flag from memory.

    - id: task-port-write
      name: "Task Port: Write"
      transfer:
        dojo: cse598-avr-f2024
        module: xnu-mach-ports
        challenge: task-port-write
      description: |
        Use the task port to write to memory to get the flag.

    - id: task-port-flag-in-mem
      name: "Task Port: Flag in Memory"
      transfer:
        dojo: cse598-avr-f2024
        module: xnu-mach-ports
        challenge: task-port-flag-in-mem
      description: |
        Use the task port to find the flag in memory.

    - id: task-port
      name: Task Port
      transfer:
        dojo: cse598-avr-f2024
        module: xnu-mach-ports
        challenge: task-port
      description: |
        Use the task port to pop the binary.

    - id: exception-port
      name: Exception Port
      transfer:
        dojo: cse598-avr-f2024
        module: xnu-mach-ports
        challenge: exception-port
      description: |
        Use the exception port to pop the binary.

- id: xnu-iokit
  name: IOKit
  image: mac:macos-12.5-iokit
  description: |
    Let's dig into kernel space and learn how to talk to kernel extensions and drivers using IOKit!

    **Critical Note**: The machines that you are working on are purely ephemeral and **none** of your data there is saved!

    This means that you must, must, must, save your files / solution locally if you want them to persist.

    You've been warned.

    Also, you can only use `ssh hacker@pwn.college` to acess the server, the Workspace and Desktop don't work.

    Shoutout the great and mysterious hacker crowell for the original version of these challenges.

  resources:
  - name: "IOKit"
    type: lecture
    video: zJYTyOUkTDU
    playlist: PL-ymxv0nOtqqgWG_kT9WJ50MvHKWG9cFy
    slides: 1T4gb2Ny09u7ViNVzGcjvw9ge8YLBSHwP

  challenges:
    - id: iokit-connect
      name: "Connect to me"
      transfer:
        dojo: cse598-avr-f2024
        module: xnu-iokit
        challenge: iokit-connect
      description: |
        Connect to io.oooverflow.IPwnKit, and the flag is given in the logs.

        Kext is in `/Library/Extensions/IPwnKit.kext`

        Use `log show` to read the logs.

    - id: iokit-open-user-client
      name: "Talk to my client"
      transfer:
        dojo: cse598-avr-f2024
        module: xnu-iokit
        challenge: iokit-open-user-client
      description: |
        Correctly open a connect to the user client to get the flag.

        Kext is in `/Library/Extensions/IPwnKit.kext`

    - id: iokit-say-hi
      name: "Say Hi"
      transfer:
        dojo: cse598-avr-f2024
        module: xnu-iokit
        challenge: iokit-say-hi
      description: |
        Use the user client to say hi, and the driver will give you the flag.

        Kext is in `/Library/Extensions/IPwnKit.kext`

    - id: iokit-read-num
      name: "Just read the flag"
      transfer:
        dojo: cse598-avr-f2024
        module: xnu-iokit
        challenge: iokit-read-num
      description: |
        Now we're getting to the good stuff. You can now call ReadNum, how can you use this to get the flag?
        
        Kext is in `/Library/Extensions/IPwnKit.kext`

    - id: iokit-write-num
      name: "Write Num To Win"
      transfer:
        dojo: cse598-avr-f2024
        module: xnu-iokit
        challenge: iokit-write-num
      description: |
        Well, the flag isn't in the driver anymore, but you can call WriteNum. How can you use this to get the flag?

        Kext is in `/Library/Extensions/IPwnKit.kext`

- id: xnu-pac
  name: PAC
  description: |
    How can we achieve control flow hijacking when given arbitrary read / arbitrary write when Pointer Authentication (PAC) is enabled?

    All of the challenges will have a different kext.

    **Critical Note**: The machines that you are working on are purely ephemeral and **none** of your data there is saved!

    This means that you must, must, must, save your files / solution locally if you want them to persist.

    You've been warned.

    Also, you can only use `ssh hacker@pwn.college` to acess the server, the Workspace and Desktop don't work.

  resources:
  - name: "Pointer Authentication (PAC)"
    type: lecture
    video: _uY_i7OyiHM
    playlist: PL-ymxv0nOtqqgWG_kT9WJ50MvHKWG9cFy
    slides: 1jo__tA8Wp146oBkxchhgM-6V7HPw1gc1

  - name: "Suggested Reading"
    type: markdown
    content: |
      - [Azad, "Examining Pointer Authentication on the iPhone XS"](https://googleprojectzero.blogspot.com/2019/02/examining-pointer-authentication-on.html)
      - [Azad, "A Study in PAC", MOSEC 2019](https://bazad.github.io/presentations/MOSEC-2019-A-study-in-PAC.pdf)
      - [ARM Docs, "Providing protection for complex software"](https://developer.arm.com/documentation/102433/latest/)
      - [Corbet, "ARM pointer authentication", LWN](https://lwn.net/Articles/718888/)
      - [Cai et al., "Demystifying Pointer Authentication on Apple M1", USENIX 2023](https://www.usenix.org/system/files/usenixsecurity23-cai-zechao.pdf)

  challenges:
    - id: pac-direct-gadget-a
      name: "Direct Gadget IA Key"
      image: mac:macos-12.5-pac-direct-gadget-a-key
      transfer:
        dojo: cse598-avr-f2024
        module: xnu-pac
        challenge: pac-direct-gadget-a
      description: |
        Get the flag using the provided functionality.

        Kext is in `/Library/Extensions/IPwnKit.kext`

        Use `log show` to read the logs.

    - id: pac-sub-values-a
      name: "Substitute Values IA Key"
      image: mac:macos-12.5-pac-sub-values-a-key
      transfer:
        dojo: cse598-avr-f2024
        module: xnu-pac
        challenge: pac-sub-values-a
      description: |
        Get the flag using the provided functionality.

        Kext is in `/Library/Extensions/IPwnKit.kext`

        Use `log show` to read the logs.

    - id: pac-brute-force-a
      name: "Brute Force IA Key"
      image: mac:macos-12.5-pac-brute-force-a-key
      transfer:
        dojo: cse598-avr-f2024
        module: xnu-pac
        challenge: pac-brute-force-a
      description: |
        Get the flag using the provided functionality.

        Kext is in `/Library/Extensions/IPwnKit.kext`

        Use `log show` to read the logs.

    - id: pac-signing-gadget-a
      name: "Signing Gadget IA Key"
      image: mac:macos-12.5-pac-signing-gadget-a-key
      transfer:
        dojo: cse598-avr-f2024
        module: xnu-pac
        challenge: pac-signing-gadget-a
      description: |
        Get the flag using the provided functionality.

        Kext is in `/Library/Extensions/IPwnKit.kext`

        Use `log show` to read the logs.

      
